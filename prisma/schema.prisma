generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String        @id @default(cuid())
    name          String?
    email         String?       @unique
    emailVerified DateTime?
    image         String        @default("/public/static/defaultavatar.jpg")
    accounts      Account[]
    sessions      Session[]
    notesfolders  NotesFolder[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// notes folders model
model NotesFolder {
    id          String   @id @default(cuid())
    name        String
    createdOn   DateTime @default(now())
    lastUpdated DateTime @default(now())
    User        User?    @relation(fields: [userId], references: [id])
    userId      String?
    color       String   @default("#ab6ded")

    Notes Note[]
}

// notes model
model Note {
    id            String       @id @default(cuid())
    title         String
    note          String
    createdOn     DateTime     @default(now())
    lastUpdated   DateTime     @default(now())
    NotesFolder   NotesFolder? @relation(fields: [notesFolderId], references: [id])
    notesFolderId String?

    color String @default("#ab6ded")
}
